#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import readline from 'readline';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function ask(question) {
  return new Promise((resolve) => {
    rl.question(question, resolve);
  });
}

async function setup() {
  console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GSDiscord –±–æ—Ç–∞...\n');

  // –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
  const envPath = path.join(process.cwd(), '.env');
  
  if (fs.existsSync(envPath)) {
    console.log('‚ö†Ô∏è  –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ...\n');
  } else {
    console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env...');
    
    const sheetId = await ask('–í–≤–µ–¥–∏—Ç–µ ID –≤–∞—à–µ–≥–æ Google Sheets: ');
    const discordWebhook = await ask('–í–≤–µ–¥–∏—Ç–µ URL Discord Webhook: ');
    
    const envContent = `# Google Sheets Configuration
GOOGLE_SHEET_ID=${sheetId}

# Discord Configuration  
DISCORD_WEBHOOK_URL=${discordWebhook}

# Application Configuration
LOG_LEVEL=info
`;

    fs.writeFileSync(envPath, envContent);
    console.log('‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!\n');
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const credentialsDir = path.join(process.cwd(), 'credentials');
  const credentialsExample = path.join(credentialsDir, 'google-credentials.example.json');
  
  if (!fs.existsSync(credentialsExample)) {
    console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    const exampleCredentials = {
      "type": "service_account",
      "project_id": "your-project-id",
      "private_key_id": "your-private-key-id",
      "private_key": "-----BEGIN PRIVATE KEY-----\\nYOUR_PRIVATE_KEY_HERE\\n-----END PRIVATE KEY-----\\n",
      "client_email": "your-service-account@your-project.iam.gserviceaccount.com",
      "client_id": "your-client-id",
      "auth_uri": "https://accounts.google.com/o/oauth2/auth",
      "token_uri": "https://oauth2.googleapis.com/token",
      "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
      "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/your-service-account%40your-project.iam.gserviceaccount.com"
    };
    
    fs.writeFileSync(credentialsExample, JSON.stringify(exampleCredentials, null, 2));
    console.log('‚úÖ –ü—Ä–∏–º–µ—Ä —Ñ–∞–π–ª–∞ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω: credentials/google-credentials.example.json\n');
  }

  console.log('üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à —Ñ–∞–π–ª —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö Google –≤ credentials/google-credentials.json');
  console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª–µ .env');
  console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π: npm start');
  console.log('\nüìö –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ README.md');

  rl.close();
}

setup().catch(console.error);
