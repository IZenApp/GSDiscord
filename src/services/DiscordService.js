import fetch from 'node-fetch';
import config from '../config/config.js';
import { logger } from '../utils/logger.js';

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Discord
 */
export class DiscordService {
  constructor() {
    this.webhookUrl = config.discord.webhookUrl;
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Discord
   * @param {Array} formData - –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
   * @param {Array} headers - –ó–∞–≥–æ–ª–æ–≤–∫–∏ –ø–æ–ª–µ–π
   * @returns {Promise<boolean>} –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
   */
  async sendMessage(formData, headers) {
    try {
      const fieldsForDiscord = formData.map((item, index) => {
        const header = headers[index] || `–ü–æ–ª–µ ${index + 1}`;
        return `**${header}:**\n${item}`;
      }).join('\n\n');

      const payload = {
        embeds: [{
          title: 'üìã –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –≤ Google Sheets',
          description: fieldsForDiscord,
          color: config.discord.embedColor,
          footer: {
            text: '–û–±–Ω–æ–≤–ª–µ–Ω–æ: ' + new Date().toLocaleString('ru-RU'),
          },
          timestamp: new Date().toISOString(),
        }],
        content: config.discord.mentionEveryone ? '@everyone' : null,
      };
      
      const response = await fetch(this.webhookUrl, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload),
      });
      
      if (response.status === 204) {
        logger.info('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Discord');
        return true;
      } else {
        logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Discord: ${response.status}`);
        return false;
      }
    } catch (error) {
      logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Discord:', error);
      return false;
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
   * @returns {Promise<void>}
   */
  async sendStartupNotification() {
    try {
      const payload = {
        embeds: [{
          title: 'üöÄ GSDiscord Bot –∑–∞–ø—É—â–µ–Ω',
          description: '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Google Sheets',
          color: 0x00FF00,
          timestamp: new Date().toISOString(),
        }],
      };
      
      await fetch(this.webhookUrl, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload),
      });
      
      logger.info('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Discord');
    } catch (error) {
      logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø—É—Å–∫–µ:', error);
    }
  }
}

export default DiscordService;
